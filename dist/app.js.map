{"version":3,"sources":["../src/app.js"],"names":["debug","require","mongoose","connect","process","env","MONGODB_URL","config","get","useNewUrlParser","useFindAndModify","then","console","log","err","app","set","path","join","__dirname","use","express","bodyParser","json","urlencoded","extended","router","listen"],"mappings":";;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AANA,IAAMA,KAAK,GAAEC,OAAO,CAAC,OAAD,CAAP,CAAiB,cAAjB,CAAb;;AAQAC,qBAASC,OAAT,CAAiBC,OAAO,CAACC,GAAR,CAAYC,WAAZ,GAAwBC,mBAAOC,GAAP,CAAW,UAAX,CAAzC,EAAkE;AAAEC,EAAAA,eAAe,EAAE,IAAnB;AAA0BC,EAAAA,gBAAgB,EAAE;AAA5C,CAAlE,EACCC,IADD,CACM;AAAA,SAAMC,OAAO,CAACC,GAAR,CAAY,WAAZ,CAAN;AAAA,CADN,WAEO,UAACC,GAAD;AAAA,SAASF,OAAO,CAACC,GAAR,CAAYC,GAAZ,CAAT;AAAA,CAFP;;AAIA,IAAMC,GAAG,GAAG,0BAAZ;AAEAA,GAAG,CAACC,GAAJ,CAAQ,OAAR,EAAiBC,iBAAKC,IAAL,CAAUC,SAAV,EAAqB,OAArB,CAAjB;AACAJ,GAAG,CAACC,GAAJ,CAAQ,aAAR,EAAuB,KAAvB;AACAD,GAAG,CAACK,GAAJ,CAAQC,8BAAeF,SAAS,GAAG,SAA3B,CAAR;AAEAJ,GAAG,CAACK,GAAJ,CAAQE,uBAAWC,IAAX,EAAR;AACAR,GAAG,CAACK,GAAJ,CAAQE,uBAAWE,UAAX,CAAsB;AAACC,EAAAA,QAAQ,EAAE;AAAX,CAAtB,CAAR;AACAV,GAAG,CAACK,GAAJ,CAAQ,GAAR,EAAaM,kBAAb;AAGAX,GAAG,CAACY,MAAJ,CAAW,IAAX,EAAiB,YAAM;AACnB3B,EAAAA,KAAK,qCAA8BO,mBAAOC,GAAP,CAAW,MAAX,CAA9B,qBAA2DD,mBAAOC,GAAP,CAAW,MAAX,CAA3D,WAAL;AACAI,EAAAA,OAAO,CAACC,GAAR,qCAAyCN,mBAAOC,GAAP,CAAW,MAAX,CAAzC,qBAAsED,mBAAOC,GAAP,CAAW,MAAX,CAAtE;AACH,CAHD;AAKAI,OAAO,CAACC,GAAR,CAAYE,GAAG,CAACP,GAAJ,CAAQ,MAAR,CAAZ","sourcesContent":["const debug =require('debug')('server:debug');\r\nimport express from 'express'\r\nimport bodyParser from 'body-parser'\r\nimport mongoose from 'mongoose'\r\nimport config from 'config'\r\nimport router from './routes'\r\nimport path from 'path'\r\n\r\nmongoose.connect(process.env.MONGODB_URL+config.get('database'),  { useNewUrlParser: true , useFindAndModify: false})\r\n.then(() => console.log('connected'))\r\n.catch((err) => console.log(err))\r\n\r\nconst app = express()\r\n\r\napp.set('views', path.join(__dirname, 'views'))\r\napp.set('view engine', 'ejs')\r\napp.use(express.static(__dirname + '/public'))\r\n\r\napp.use(bodyParser.json())\r\napp.use(bodyParser.urlencoded({extended: true}))\r\napp.use('/', router)\r\n\r\n\r\napp.listen(4000, () => {\r\n    debug(`server is running on port ${config.get('port')} and in ${config.get('name')} mode`);\r\n    console.log(`server is running on port ${config.get('port')} and in ${config.get('name')} mode`);\r\n})\r\n\r\nconsole.log(app.get('port'))"],"file":"app.js"}